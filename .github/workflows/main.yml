name: Test & Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d
        with:
          php-version: "8.1"
      - uses: actions/checkout@v2
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --ignore-platform-reqs --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Fetch Template
        run: php artisan initializer:update-template
      - name: Static analysis via PHPStan
        run: vendor/bin/phpstan analyze --memory-limit 4G
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit --exclude-group Docker --coverage-clover coverage.xml
      - uses: codecov/codecov-action@v2.1.0
        with:
          file: coverage.xml

  #  docker-tests:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: shivammathur/setup-php@c5fc0d8281aba02c7fda07d3a70cc5371548067d
  #        with:
  #          php-version: '8.1'
  #      - uses: actions/checkout@v2
  #      - name: Copy .env
  #        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #      - name: Install Dependencies
  #        run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist --ignore-platform-reqs
  #      - name: Generate key
  #        run: php artisan key:generate
  #      - name: Directory Permissions
  #        run: chmod -R 777 storage bootstrap/cache
  #      - name: Fetch Template
  #        run: php artisan initializer:update-template
  #      - name: Execute tests (Unit and Feature tests) via PHPUnit
  #        run: vendor/bin/phpunit --testsuite Integration

  deploy:
    if: github.ref == 'refs/heads/main'
    needs:
      - unit-tests
    #      - docker-tests

    environment: production
    env:
      SENTRY_ORG: "niclas-van-eyk"
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy

      - name: Sentry Release
        uses: getsentry/action-release@v1.1.6
        with:
          environment: production
          projects: initializer-for-laravel
