name: Initializer for Laravel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-tests:
    runs-on: ubuntu-latest
    container: docker:20-dind
    steps:
    - name: Install PHP8
      run: apk update && apk upgrade && apk add php8 php8-ctype php8-curl php8-dom php8-exif php8-fileinfo php8-fpm php8-gd php8-iconv php8-intl php8-mbstring php8-mysqli php8-opcache php8-openssl php8-pecl-imagick php8-pecl-redis php8-phar php8-session php8-simplexml php8-soap php8-xml php8-xmlreader php8-zip php8-zlib php8-pdo php8-xmlwriter php8-tokenizer && ln -s /usr/bin/php8 /usr/bin/php
    - name: Install Composer
      run: php -r "copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');" && php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist --ignore-platform-reqs
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Fetch Template
      run: php artisan initializer:update-template
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit
    

  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Fetch Template
      run: php artisan initializer:update-template
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit --exclude-group Docker
